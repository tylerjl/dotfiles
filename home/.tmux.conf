# Tmuuuuuuuuuux
# =============
#
# Examples
# --------
#
# Activity monitoring (big banner at bottom)
# setw -g monitor-activity on
# set -g visual-activity on
#
# Example of using a shell command in the status line
# set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"
#
# Now, onto the config:
# ---------------------

# I need my zsh
set-option -g default-shell /bin/zsh

# Set the default TERM (some curses-like programs need to know)
set -g default-terminal screen

# Update the TERM variable of terminal emulator when creating a new session
# or attaching a existing session
set -g update-environment 'TERM'
# Determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# Bind C-b to C-Space for easier shortcuts
unbind C-b
set-option -g prefix C-Space

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Allows us to use C-Space b <command> to send commands to a TMUX session
# inside another TMUX session
bind b send-prefix

# Use vim keybindings for copy mode
setw -g mode-keys vi

# Easier copy mode shortcut
bind Space copy-mode
bind C-Space copy-mode

# Bind 'v' to begin copy selection
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Reload configuration
unbind r
bind r source-file ~/.tmux.conf

# Mouse integration (simply `mouse` in versions >= 2.1
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# for iTerm2 compatability
setw -g aggressive-resize off

# OS-specific file inclusions
if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'

# Simpler window cycling (vim-like bindings)
bind-key -n C-k next-window
bind-key -n C-j previous-window

# Quick pane switching
bind-key -n C-h last-pane

# Need more scrollback
set -g history-limit 10000

# Easier pane sizing
bind-key -n S-Up resize-pane -U 1
bind-key -n S-Down resize-pane -D 1
bind-key -n S-Left resize-pane -L 1
bind-key -n S-Right resize-pane -R 1

# vim pane movement
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# mnemonic splitting
bind | split-window -h
bind - split-window -v

# Only constrain window size for active (focused) windows
set -g aggressive-resize on

# Powerline
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"
